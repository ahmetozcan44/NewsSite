@model NewsSite.Web.Areas.Admin.Models.PictureModel

@{
    ViewBag.Title = Model.PictureGalery.Name + " - " + Resource.Pictures;
}

@using (Html.BeginForm("AddPicture", "PictureGalery", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-inline" }))
{
    @Html.HiddenFor(x => x.PictureGalery.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.PictureGaleryImg, htmlAttributes: new { @class = "sr-only" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PictureGaleryImg, "_" + NewsSite.Core.Application.Keys.HttpPostedFileBase, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PictureGaleryImg, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control", placeholder = Resource.Order } })
            @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
        </div>
    </div>
    <button type="submit" class="btn btn-primary">@Resource.Upload</button>
}
<hr />

@using GridMvc.Html
@Html.Grid(Model.PictureGalery.Pictures).Columns(columns =>
{
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(x => Edit(x));
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(x => Image(x));
}).WithPaging(20)

@helper Edit(NewsSite.Core.Database.Tables.Picture Picture)
{
    <a href='@Url.Action("DeletePicture", "PictureGalery", new { id = Picture.Id })' onclick="return confirm('@Resource.DeleteConfirmation')" class="btn btn-primary"><span class="glyphicon glyphicon-minus"></span></a>
}

@helper Image(NewsSite.Core.Database.Tables.Picture Picture)
{
    <img src="~/@Picture.ImgUrlSmall" alt="@Model.PictureGalery.Name" class="img-rounded">
}